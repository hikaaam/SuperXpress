export const generateController = (name: string) => {
    return `//generated by cli
import {  Like } from "typeorm";
import { ${name} } from "../../Entity/${name}";
import res from "../Response";
import { Paginate, _id } from '../../Vendor'
import { I${name}Fillable } from '../RestValidator/${name}';

class ${name}Controller {
    constructor() { }

    static index = async () => {
        try {
            const data = await ${name}.find();
            return res(true, "success", data);
        } catch (error) {
            throw new Error(error.message);
        }
    };

    static paginate = async (page: number) => {
        try {
            let data = await Paginate({
                get: 2,
                page,
                entity: ${name},
            });
            return res(true, "success", data);
        } catch (error) {
            throw new Error(error.message);
        }
    };

    static search = async (req: string) => {
        try {
            const data = await ${name}.find({
                where: [{
                    name: Like(\`%\$\{req}%\`)
                }]
            })
            return res(true, "success", data);
        } catch (error) {
            throw new Error(error.message);
        }
    }

    static show = async (id: _id) => {
        try {
            const data = await ${name}.findOneOrFail(id);
            return res(true, "success", data);
        } catch (error) {
            throw new Error(error.message);
        }
    };

    static store = async (req: I${name}Fillable) => {
        try {
            const data = await ${name}.save(req);
            return res(true, "success", data);
        } catch (error) {
            throw new Error(error.message);
        }
    };

    static update = async (id: _id, req: I${name}Fillable) => {
        try {
            const data = await ${name}.update(id, req);
            return res(true, "success", data);
        } catch (error) {
            throw new Error(error.message);
        }
    };

    static delete = async (id: _id, req: I${name}Fillable) => {
        try {
            const data = await ${name}.delete(id);
            return res(true, "success", data);
        } catch (error) {
            throw new Error(error.message);
        }
    };
}
export default ${name}Controller;
`;
}
